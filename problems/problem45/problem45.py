## Problem 45
# Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

# Triangle	 	Tn=n(n+1)/2	 	1, 3, 6, 10, 15, ...
# Pentagonal	Pn=n(3n−1)/2	1, 5, 12, 22, 35, ...
# Hexagonal	 	Hn=n(2n−1)	 	1, 6, 15, 28, 45, ...
# It can be verified that T285 = P165 = H143 = 40755.

# Find the next triangle number that is also pentagonal and hexagonal.

import time
import sys

sys.path.append("../..")
from utils.log import MarkdownLogger
import operator


def get_triangle(n=int):
    return int(n * (n + 1) / 2)


def get_pentagonal(n=int):
    return int(n * (3 * n - 1) / 2)


def get_hexagonal(n=int):
    return int(n * (2 * n - 1))


def run():
    t = 286
    tset = set([])
    p = 166
    pset = set([])
    h = 144
    hset = set([])
    k = 0
    while True:
        if k == 100:
            intersect = tset.intersection(pset, hset)
            if len(intersect) > 0:
                intersect_list = list(intersect)
                intersect_list.sort()
                result = intersect_list[0]
                break
            else:
                k -= 100

        tset.add(get_triangle(t))
        pset.add(get_pentagonal(p))
        hset.add(get_hexagonal(h))
        t += 1
        p += 1
        h += 1
        k += 1
    return result


if __name__ == "__main__":
    logger = MarkdownLogger(last_problem=723)
    problem_id = int(sys.argv[0].split("m")[1].split(".")[0])
    startTime = time.time()
    solution = run()
    duration = round(time.time() - startTime, 5)
    logger.add_problem(
        solution, problem_id=problem_id, duration=duration, language="Python"
    )
    print(
        f"\nThe solution is {solution} and the script took {round(duration, 2)} seconds."
    )

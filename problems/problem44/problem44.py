## Problem 44

# Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

# 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

# It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

# Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?

import time
import sys

sys.path.append("../..")
from utils.log import MarkdownLogger


def is_pentagonal(number):
    # also check https://en.wikipedia.org/wiki/Pentagonal_number#Tests_for_pentagonal_numbers
    # could be a lot faster
    n = 1
    while n:
        res = n * (3 * n - 1) / 2
        if res < number:
            n += 1
        elif res == number:
            return True
        else:
            return False


def run():
    t = 1

    while t:
        for s in range(1, t):
            i = t * (3 * t - 1) / 2
            j = s * (3 * s - 1) / 2
            if is_pentagonal(i + j) and is_pentagonal(i - j):
                return int(i - j)
        t += 1


if __name__ == "__main__":
    logger = MarkdownLogger(last_problem=723)
    problem_id = int(sys.argv[0].split("m")[1].split(".")[0])
    startTime = time.time()
    solution = run()
    duration = round(time.time() - startTime, 5)
    logger.add_problem(
        solution, problem_id=problem_id, duration=duration, language="Python"
    )
    print(
        f"\nThe solution is {solution} and the script took {round(duration, 2)} seconds."
    )
